name: ci

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}

    timeout-minutes: 100

    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm/v6
          - os: ubuntu-24.04-arm
            platform: linux/arm/v7
          - os: ubuntu-24.04-arm
            platform: linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "VCS_REF=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/docker-nginx-http3
            ghcr.io/${{ github.repository_owner }}/docker-nginx-http3

      - name: Set up QEMU
        if: ${{ (matrix.platform.platform == 'linux/arm/v6') || matrix.platform.platform == 'linux/arm/v7' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=${{ secrets.DOCKERHUB_USERNAME }}/docker-nginx-http3,ghcr.io/${{ github.repository_owner }}/docker-nginx-http3",push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ github.repository }}-${{ github.ref_name }}-${{ matrix.platform.platform }}
          cache-to: type=gha,scope=${{ github.repository }}-${{ github.ref_name }}-${{ matrix.platform.platform }},mode=max
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            VCS_REF=${{ env.VCS_REF }}
            GITHUB_REF=${{ github.ref }}
            GITHUB_RUN_ID=${{ github.run_id }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            GITHUB_RUN_ATTEMPT=${{ github.run_attempt }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Platform slug
        id: platform-slug
        run: echo "platform=${{ matrix.platform.platform }}" | tr '/' '-' >> $GITHUB_OUTPUT

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.platform-slug.outputs.platform }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    needs:
      - build

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/docker-nginx-http3
            ghcr.io/${{ github.repository_owner }}/docker-nginx-http3
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=
            type=sha,prefix=,format=long

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        if: github.event_name != 'pull_request'
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ secrets.DOCKERHUB_USERNAME }}/docker-nginx-http3@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository_owner }}/docker-nginx-http3@sha256:%s ' *)

      - name: Inspect images
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USERNAME }}/docker-nginx-http3:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/docker-nginx-http3:${{ steps.meta.outputs.version }}
